plugins {
    id 'java-library'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

description = "Spring implementation to  access Alfresco's SOLR Endpoint"

repositories {
    mavenCentral()
    maven { url 'https://artifacts.alfresco.com/nexus/content/groups/public/' }
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom implementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

dependencies {
    compileOnly "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    api project(':alfresco-solrapi-client:alfresco-solrapi-client-api')
    api project(':alfresco-remote-api-exceptions')

    implementation 'org.springframework.boot:spring-boot'
    implementation 'org.springframework:spring-web'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.apache.httpcomponents:httpclient'
    implementation 'org.slf4j:slf4j-api'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testRuntimeOnly 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'

//    integrationTestRuntimeOnly 'org.slf4j:slf4j-simple'
    integrationTestImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    integrationTestImplementation project(':alfresco-solrapi-client:alfresco-solrapi-integration-tests')
    integrationTestImplementation project(':alfresco-rest-client:alfresco-rest-client-spring')
    integrationTestImplementation project(':alfresco-webscripts-client:alfresco-webscripts-spring')
    integrationTestRuntimeOnly 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml'

}

test {
    useJUnitPlatform()
}

task integrationTest(type: Test, group: "verification") {
    shouldRunAfter(test)

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    useJUnitPlatform()
    outputs.upToDateWhen { false }
}

//evaluationDependsOn(':alfresco-solrapi-client:alfresco-solrapi-integration-tests')
rootProject.dockerCompose.isRequiredBy(integrationTest)
project.tasks.check.dependsOn(integrationTest)

apply from: "${rootProject.projectDir}/maven-publish.gradle"